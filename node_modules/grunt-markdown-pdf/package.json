{
  "name": "grunt-markdown-pdf",
  "description": "Grunt plugin to convert Markdown documents to PDF",
  "version": "2.1.1",
  "homepage": "https://github.com/alanshaw/grunt-markdown-pdf",
  "author": {
    "name": "Alan Shaw",
    "email": "alan138@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/alanshaw/grunt-markdown-pdf.git"
  },
  "bugs": {
    "url": "https://github.com/alanshaw/grunt-markdown-pdf/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/alan/shaw/grunt-markdown-pdf/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": "~0.10.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "markdown",
    "pdf",
    "convert",
    "template"
  ],
  "dependencies": {
    "markdown-pdf": "~2.1.0",
    "async": "~0.2.8"
  },
  "readme": "# grunt-markdown-pdf [![Build Status](https://travis-ci.org/alanshaw/grunt-markdown-pdf.png)](https://travis-ci.org/alanshaw/grunt-markdown-pdf) [![dependency Status](https://david-dm.org/alanshaw/grunt-markdown-pdf.png)](https://david-dm.org/alanshaw/grunt-markdown-pdf)\n\n> Grunt plugin to convert markdown documents to PDF\n\nThin wrapper around [markdown-pdf](https://github.com/alanshaw/markdown-pdf).\n\nThe PDF looks great because it is styled by HTML5 Boilerplate. What? - Yes! Your Markdown is first converted to HTML, then pushed into the HTML5 Boilerplate `index.html`. Phantomjs renders the page and saves it to a PDF. You can even customise the style of the PDF by passing an optional path to your CSS _and_ you can pre-process your markdown file before it is converted to a PDF by passing in a pre-processing function, for templating.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-markdown-pdf --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-markdown-pdf');\n```\n\n## The \"markdownpdf\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `markdownpdf` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  markdownpdf: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  }\n});\n```\n\n### Options\n\n#### options.phantomPath\nType: `String`\nDefault value: `Path provided by phantomjs module`\n\nPath to phantom binary\n\n#### options.concat\nType: `Boolean`\nDefault value: `false`\n\nIf set to true, a single PDF will be created containing the contents of all of the Markdown files.\n\n#### options.cssPath\nType: `String`\nDefault value: `node_modules/markdown-pdf/pdf.css`\n\nPath to custom CSS file, relative to the current working directory.\n\n#### options.paperFormat\nType: `String`\nDefault value: `A4`\n\n'A3', 'A4', 'A5', 'Legal', 'Letter' or 'Tabloid'\n\n#### options.paperOrientation\nType: `String`\nDefault value: `portrait`\n\n'portrait' or 'landscape'\n\n#### options.paperBorder\nType: `String`\nDefault value: `1cm`\n\nSupported dimension units are: 'mm', 'cm', 'in', 'px'\n\n#### options.renderDelay\nType: `Number`\nDefault value: `1000`\n\nDelay in millis before rendering the PDF (give HTML and CSS a chance to load)\n\n#### options.preProcessMd\nType: `Function`\nDefault value: `function () { return through() }`\n\nA function that returns a [through stream](https://npmjs.org/package/through) that transforms the markdown before it is converted to HTML.\n\n#### options.preProcessHtml\nType: `Function`\nDefault value: `function () { return through() }`\n\nA function that returns a [through stream](https://npmjs.org/package/through) that transforms the HTML before it is converted to markdown.\n\n### Usage Examples\n\n#### Default Options\nIn this example, the default options are used to convert all markdown files in the directory `src/` to PDFs in the directory `dest/`.\n\n```js\ngrunt.initConfig({\n  markdownpdf: {\n    options: {},\n    files: {\n      src: \"src/*.md\",\n      dest: \"dest\"\n    }\n  }\n})\n```\n\n### Replace characters with preProcessMd\nIn this example we use a through stream called [split](https://npmjs.org/package/split) to split the markdown file into lines and replace `foo` with `bar`.\n\n```js\nvar split = require(\"split\")\n\ngrunt.initConfig({\n  markdownpdf: {\n    dist: {\n      options: {\n        preProcessMd: function () {\n          return split(function (line) {\n            return line.replace(\"foo\", \"bar\") + \"\\n\"\n          })\n        }\n      },\n      src: \"document.md\",\n      dest: \"dist/\"\n    }\n  }\n})\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n * 2013-12-27   v2.0.0   Use updated (streaming) markdown-pdf module and implement concat files properly\n * 2013-09-04   v1.0.0   Use updated markdown-pdf module - CSS path is now relative to current working directory\n * 2013-06-14   v0.3.0   Use marked module for better markdown compatibility and performance\n * 2013-05-30   v0.2.0   Allow concatenation of multiple source files to produce a single PDF\n * 2013-05-19   v0.1.0   Callback hooks allowing markdown (and html) content to be pre-processed\n * 2013-05-19   v0.0.0   Initial release\n",
  "readmeFilename": "README.md",
  "_id": "grunt-markdown-pdf@2.1.1",
  "dist": {
    "shasum": "57c91889b980a3f745f1b88d7d6bac4350c6f313",
    "tarball": "http://registry.npmjs.org/grunt-markdown-pdf/-/grunt-markdown-pdf-2.1.1.tgz"
  },
  "_from": "grunt-markdown-pdf@",
  "_npmVersion": "1.3.21",
  "_npmUser": {
    "name": "alanshaw",
    "email": "alan138@gmail.com"
  },
  "maintainers": [
    {
      "name": "alanshaw",
      "email": "alan138@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "57c91889b980a3f745f1b88d7d6bac4350c6f313",
  "_resolved": "https://registry.npmjs.org/grunt-markdown-pdf/-/grunt-markdown-pdf-2.1.1.tgz"
}
